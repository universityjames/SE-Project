<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>